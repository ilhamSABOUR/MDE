/*
 * generated by Xtext 2.24.0
 */
package org.xtext.example.userstory.services;

import com.google.inject.Inject;
import com.google.inject.Singleton;
import java.util.List;
import org.eclipse.xtext.Alternatives;
import org.eclipse.xtext.Assignment;
import org.eclipse.xtext.CrossReference;
import org.eclipse.xtext.Grammar;
import org.eclipse.xtext.GrammarUtil;
import org.eclipse.xtext.Group;
import org.eclipse.xtext.Keyword;
import org.eclipse.xtext.ParserRule;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.TerminalRule;
import org.eclipse.xtext.common.services.TerminalsGrammarAccess;
import org.eclipse.xtext.service.AbstractElementFinder;
import org.eclipse.xtext.service.GrammarProvider;

@Singleton
public class UserStoryGrammarAccess extends AbstractElementFinder.AbstractGrammarElementFinder {
	
	public class BacklogElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.userstory.UserStory.Backlog");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameSTRINGTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Assignment cBacklogAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cBacklogUsParserRuleCall_1_0 = (RuleCall)cBacklogAssignment_1.eContents().get(0);
		
		//Backlog:
		//	name=STRING
		//	backlog+=Us*;
		@Override public ParserRule getRule() { return rule; }
		
		//name=STRING
		//backlog+=Us*
		public Group getGroup() { return cGroup; }
		
		//name=STRING
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0_0() { return cNameSTRINGTerminalRuleCall_0_0; }
		
		//backlog+=Us*
		public Assignment getBacklogAssignment_1() { return cBacklogAssignment_1; }
		
		//Us
		public RuleCall getBacklogUsParserRuleCall_1_0() { return cBacklogUsParserRuleCall_1_0; }
	}
	public class UsElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.userstory.UserStory.Us");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cUserKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Keyword cStoryKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cColonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cIdAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cIdINTTerminalRuleCall_3_0 = (RuleCall)cIdAssignment_3.eContents().get(0);
		private final Assignment cTitreAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cTitreSTRINGTerminalRuleCall_4_0 = (RuleCall)cTitreAssignment_4.eContents().get(0);
		private final Keyword cAsKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Keyword cAKeyword_6 = (Keyword)cGroup.eContents().get(6);
		private final Assignment cRoleAssignment_7 = (Assignment)cGroup.eContents().get(7);
		private final RuleCall cRoleRoleParserRuleCall_7_0 = (RuleCall)cRoleAssignment_7.eContents().get(0);
		private final Keyword cIKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Keyword cWantKeyword_9 = (Keyword)cGroup.eContents().get(9);
		private final Keyword cToKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Keyword cBeKeyword_11 = (Keyword)cGroup.eContents().get(11);
		private final Keyword cAbleKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Keyword cToKeyword_13 = (Keyword)cGroup.eContents().get(13);
		private final Assignment cActivityAssignment_14 = (Assignment)cGroup.eContents().get(14);
		private final RuleCall cActivityUsActivityParserRuleCall_14_0 = (RuleCall)cActivityAssignment_14.eContents().get(0);
		private final Group cGroup_15 = (Group)cGroup.eContents().get(15);
		private final Keyword cScenarioKeyword_15_0 = (Keyword)cGroup_15.eContents().get(0);
		private final Keyword cColonKeyword_15_1 = (Keyword)cGroup_15.eContents().get(1);
		private final Group cGroup_16 = (Group)cGroup.eContents().get(16);
		private final Keyword cGivenKeyword_16_0 = (Keyword)cGroup_16.eContents().get(0);
		private final Assignment cArtifactAssignment_16_1 = (Assignment)cGroup_16.eContents().get(1);
		private final RuleCall cArtifactUsArtifactParserRuleCall_16_1_0 = (RuleCall)cArtifactAssignment_16_1.eContents().get(0);
		private final Group cGroup_16_2 = (Group)cGroup_16.eContents().get(2);
		private final Keyword cAndKeyword_16_2_0 = (Keyword)cGroup_16_2.eContents().get(0);
		private final Assignment cOtherArtifactAssignment_16_2_1 = (Assignment)cGroup_16_2.eContents().get(1);
		private final RuleCall cOtherArtifactUsArtifactParserRuleCall_16_2_1_0 = (RuleCall)cOtherArtifactAssignment_16_2_1.eContents().get(0);
		private final Group cGroup_17 = (Group)cGroup.eContents().get(17);
		private final Keyword cWhenKeyword_17_0 = (Keyword)cGroup_17.eContents().get(0);
		private final Assignment cEventAssignment_17_1 = (Assignment)cGroup_17.eContents().get(1);
		private final RuleCall cEventUsEventParserRuleCall_17_1_0 = (RuleCall)cEventAssignment_17_1.eContents().get(0);
		private final Group cGroup_17_2 = (Group)cGroup_17.eContents().get(2);
		private final Keyword cAndKeyword_17_2_0 = (Keyword)cGroup_17_2.eContents().get(0);
		private final Assignment cOtherEventAssignment_17_2_1 = (Assignment)cGroup_17_2.eContents().get(1);
		private final RuleCall cOtherEventUsEventParserRuleCall_17_2_1_0 = (RuleCall)cOtherEventAssignment_17_2_1.eContents().get(0);
		private final Group cGroup_18 = (Group)cGroup.eContents().get(18);
		private final Keyword cComingKeyword_18_0 = (Keyword)cGroup_18.eContents().get(0);
		private final Keyword cFromKeyword_18_1 = (Keyword)cGroup_18.eContents().get(1);
		private final Assignment cOtherActivityAssignment_18_2 = (Assignment)cGroup_18.eContents().get(2);
		private final CrossReference cOtherActivityUsActivityCrossReference_18_2_0 = (CrossReference)cOtherActivityAssignment_18_2.eContents().get(0);
		private final RuleCall cOtherActivityUsActivityIDTerminalRuleCall_18_2_0_1 = (RuleCall)cOtherActivityUsActivityCrossReference_18_2_0.eContents().get(1);
		private final Group cGroup_19 = (Group)cGroup.eContents().get(19);
		private final Keyword cThenKeyword_19_0 = (Keyword)cGroup_19.eContents().get(0);
		private final Assignment cEventAssignment_19_1 = (Assignment)cGroup_19.eContents().get(1);
		private final RuleCall cEventUsEventParserRuleCall_19_1_0 = (RuleCall)cEventAssignment_19_1.eContents().get(0);
		
		//Us:
		//	'User' 'story' ':' id=INT titre=STRING?
		//	'As' 'a' role=Role? 'I' 'want' 'to' 'be' 'able' 'to' activity=usActivity? ('Scenario' ':')? ('Given'
		//	artifact=usArtifact ('and' otherArtifact=usArtifact)*)? ('When' Event=usEvent ('and' otherEvent=usEvent)*)? ('coming'
		//	'from' otherActivity=[usActivity]*)? ('Then' Event=usEvent)?;
		@Override public ParserRule getRule() { return rule; }
		
		//'User' 'story' ':' id=INT titre=STRING?
		//'As' 'a' role=Role? 'I' 'want' 'to' 'be' 'able' 'to' activity=usActivity? ('Scenario' ':')? ('Given' artifact=usArtifact
		//('and' otherArtifact=usArtifact)*)? ('When' Event=usEvent ('and' otherEvent=usEvent)*)? ('coming' 'from'
		//otherActivity=[usActivity]*)? ('Then' Event=usEvent)?
		public Group getGroup() { return cGroup; }
		
		//'User'
		public Keyword getUserKeyword_0() { return cUserKeyword_0; }
		
		//'story'
		public Keyword getStoryKeyword_1() { return cStoryKeyword_1; }
		
		//':'
		public Keyword getColonKeyword_2() { return cColonKeyword_2; }
		
		//id=INT
		public Assignment getIdAssignment_3() { return cIdAssignment_3; }
		
		//INT
		public RuleCall getIdINTTerminalRuleCall_3_0() { return cIdINTTerminalRuleCall_3_0; }
		
		//titre=STRING?
		public Assignment getTitreAssignment_4() { return cTitreAssignment_4; }
		
		//STRING
		public RuleCall getTitreSTRINGTerminalRuleCall_4_0() { return cTitreSTRINGTerminalRuleCall_4_0; }
		
		//'As'
		public Keyword getAsKeyword_5() { return cAsKeyword_5; }
		
		//'a'
		public Keyword getAKeyword_6() { return cAKeyword_6; }
		
		//role=Role?
		public Assignment getRoleAssignment_7() { return cRoleAssignment_7; }
		
		//Role
		public RuleCall getRoleRoleParserRuleCall_7_0() { return cRoleRoleParserRuleCall_7_0; }
		
		//'I'
		public Keyword getIKeyword_8() { return cIKeyword_8; }
		
		//'want'
		public Keyword getWantKeyword_9() { return cWantKeyword_9; }
		
		//'to'
		public Keyword getToKeyword_10() { return cToKeyword_10; }
		
		//'be'
		public Keyword getBeKeyword_11() { return cBeKeyword_11; }
		
		//'able'
		public Keyword getAbleKeyword_12() { return cAbleKeyword_12; }
		
		//'to'
		public Keyword getToKeyword_13() { return cToKeyword_13; }
		
		//activity=usActivity?
		public Assignment getActivityAssignment_14() { return cActivityAssignment_14; }
		
		//usActivity
		public RuleCall getActivityUsActivityParserRuleCall_14_0() { return cActivityUsActivityParserRuleCall_14_0; }
		
		//('Scenario' ':')?
		public Group getGroup_15() { return cGroup_15; }
		
		//'Scenario'
		public Keyword getScenarioKeyword_15_0() { return cScenarioKeyword_15_0; }
		
		//':'
		public Keyword getColonKeyword_15_1() { return cColonKeyword_15_1; }
		
		//('Given' artifact=usArtifact ('and' otherArtifact=usArtifact)*)?
		public Group getGroup_16() { return cGroup_16; }
		
		//'Given'
		public Keyword getGivenKeyword_16_0() { return cGivenKeyword_16_0; }
		
		//artifact=usArtifact
		public Assignment getArtifactAssignment_16_1() { return cArtifactAssignment_16_1; }
		
		//usArtifact
		public RuleCall getArtifactUsArtifactParserRuleCall_16_1_0() { return cArtifactUsArtifactParserRuleCall_16_1_0; }
		
		//('and' otherArtifact=usArtifact)*
		public Group getGroup_16_2() { return cGroup_16_2; }
		
		//'and'
		public Keyword getAndKeyword_16_2_0() { return cAndKeyword_16_2_0; }
		
		//otherArtifact=usArtifact
		public Assignment getOtherArtifactAssignment_16_2_1() { return cOtherArtifactAssignment_16_2_1; }
		
		//usArtifact
		public RuleCall getOtherArtifactUsArtifactParserRuleCall_16_2_1_0() { return cOtherArtifactUsArtifactParserRuleCall_16_2_1_0; }
		
		//('When' Event=usEvent ('and' otherEvent=usEvent)*)?
		public Group getGroup_17() { return cGroup_17; }
		
		//'When'
		public Keyword getWhenKeyword_17_0() { return cWhenKeyword_17_0; }
		
		//Event=usEvent
		public Assignment getEventAssignment_17_1() { return cEventAssignment_17_1; }
		
		//usEvent
		public RuleCall getEventUsEventParserRuleCall_17_1_0() { return cEventUsEventParserRuleCall_17_1_0; }
		
		//('and' otherEvent=usEvent)*
		public Group getGroup_17_2() { return cGroup_17_2; }
		
		//'and'
		public Keyword getAndKeyword_17_2_0() { return cAndKeyword_17_2_0; }
		
		//otherEvent=usEvent
		public Assignment getOtherEventAssignment_17_2_1() { return cOtherEventAssignment_17_2_1; }
		
		//usEvent
		public RuleCall getOtherEventUsEventParserRuleCall_17_2_1_0() { return cOtherEventUsEventParserRuleCall_17_2_1_0; }
		
		//('coming' 'from' otherActivity=[usActivity]*)?
		public Group getGroup_18() { return cGroup_18; }
		
		//'coming'
		public Keyword getComingKeyword_18_0() { return cComingKeyword_18_0; }
		
		//'from'
		public Keyword getFromKeyword_18_1() { return cFromKeyword_18_1; }
		
		//otherActivity=[usActivity]*
		public Assignment getOtherActivityAssignment_18_2() { return cOtherActivityAssignment_18_2; }
		
		//[usActivity]
		public CrossReference getOtherActivityUsActivityCrossReference_18_2_0() { return cOtherActivityUsActivityCrossReference_18_2_0; }
		
		//ID
		public RuleCall getOtherActivityUsActivityIDTerminalRuleCall_18_2_0_1() { return cOtherActivityUsActivityIDTerminalRuleCall_18_2_0_1; }
		
		//('Then' Event=usEvent)?
		public Group getGroup_19() { return cGroup_19; }
		
		//'Then'
		public Keyword getThenKeyword_19_0() { return cThenKeyword_19_0; }
		
		//Event=usEvent
		public Assignment getEventAssignment_19_1() { return cEventAssignment_19_1; }
		
		//usEvent
		public RuleCall getEventUsEventParserRuleCall_19_1_0() { return cEventUsEventParserRuleCall_19_1_0; }
	}
	public class UsActivityElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.userstory.UserStory.usActivity");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cUsEventParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cUsTaskParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//usActivity:
		//	usEvent | usTask;
		@Override public ParserRule getRule() { return rule; }
		
		//usEvent | usTask
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//usEvent
		public RuleCall getUsEventParserRuleCall_0() { return cUsEventParserRuleCall_0; }
		
		//usTask
		public RuleCall getUsTaskParserRuleCall_1() { return cUsTaskParserRuleCall_1; }
	}
	public class UsTaskElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.userstory.UserStory.usTask");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIdAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIdINTTerminalRuleCall_0_0 = (RuleCall)cIdAssignment_0.eContents().get(0);
		private final Assignment cRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRefINTTerminalRuleCall_1_0 = (RuleCall)cRefAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		
		//usTask:
		//	id=INT
		//	ref=INT?
		//	name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//id=INT
		//ref=INT?
		//name=STRING
		public Group getGroup() { return cGroup; }
		
		//id=INT
		public Assignment getIdAssignment_0() { return cIdAssignment_0; }
		
		//INT
		public RuleCall getIdINTTerminalRuleCall_0_0() { return cIdINTTerminalRuleCall_0_0; }
		
		//ref=INT?
		public Assignment getRefAssignment_1() { return cRefAssignment_1; }
		
		//INT
		public RuleCall getRefINTTerminalRuleCall_1_0() { return cRefINTTerminalRuleCall_1_0; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
	}
	public class UsEventElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.userstory.UserStory.usEvent");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIdAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIdINTTerminalRuleCall_0_0 = (RuleCall)cIdAssignment_0.eContents().get(0);
		private final Assignment cRefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cRefINTTerminalRuleCall_1_0 = (RuleCall)cRefAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameSTRINGTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Assignment cTypeAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cTypeINTTerminalRuleCall_3_0 = (RuleCall)cTypeAssignment_3.eContents().get(0);
		
		//usEvent:
		//	id=INT
		//	ref=INT?
		//	name=STRING
		//	type=INT;
		@Override public ParserRule getRule() { return rule; }
		
		//id=INT
		//ref=INT?
		//name=STRING
		//type=INT
		public Group getGroup() { return cGroup; }
		
		//id=INT
		public Assignment getIdAssignment_0() { return cIdAssignment_0; }
		
		//INT
		public RuleCall getIdINTTerminalRuleCall_0_0() { return cIdINTTerminalRuleCall_0_0; }
		
		//ref=INT?
		public Assignment getRefAssignment_1() { return cRefAssignment_1; }
		
		//INT
		public RuleCall getRefINTTerminalRuleCall_1_0() { return cRefINTTerminalRuleCall_1_0; }
		
		//name=STRING
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_2_0() { return cNameSTRINGTerminalRuleCall_2_0; }
		
		//type=INT
		public Assignment getTypeAssignment_3() { return cTypeAssignment_3; }
		
		//INT
		public RuleCall getTypeINTTerminalRuleCall_3_0() { return cTypeINTTerminalRuleCall_3_0; }
	}
	public class UsArtifactElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.userstory.UserStory.usArtifact");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cIdAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cIdINTTerminalRuleCall_0_0 = (RuleCall)cIdAssignment_0.eContents().get(0);
		private final Assignment cNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_1_0 = (RuleCall)cNameAssignment_1.eContents().get(0);
		private final Assignment cTypeAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTypeArtifactTypeParserRuleCall_2_0 = (RuleCall)cTypeAssignment_2.eContents().get(0);
		
		//usArtifact:
		//	id=INT
		//	name=STRING
		//	type=ArtifactType;
		@Override public ParserRule getRule() { return rule; }
		
		//id=INT
		//name=STRING
		//type=ArtifactType
		public Group getGroup() { return cGroup; }
		
		//id=INT
		public Assignment getIdAssignment_0() { return cIdAssignment_0; }
		
		//INT
		public RuleCall getIdINTTerminalRuleCall_0_0() { return cIdINTTerminalRuleCall_0_0; }
		
		//name=STRING
		public Assignment getNameAssignment_1() { return cNameAssignment_1; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_1_0() { return cNameSTRINGTerminalRuleCall_1_0; }
		
		//type=ArtifactType
		public Assignment getTypeAssignment_2() { return cTypeAssignment_2; }
		
		//ArtifactType
		public RuleCall getTypeArtifactTypeParserRuleCall_2_0() { return cTypeArtifactTypeParserRuleCall_2_0; }
	}
	public class ArtifactTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.userstory.UserStory.ArtifactType");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cDataObjectKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cTextAnnotationKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cDataStoreKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		
		//ArtifactType:
		//	'DataObject' | 'TextAnnotation' | 'DataStore';
		@Override public ParserRule getRule() { return rule; }
		
		//'DataObject' | 'TextAnnotation' | 'DataStore'
		public Alternatives getAlternatives() { return cAlternatives; }
		
		//'DataObject'
		public Keyword getDataObjectKeyword_0() { return cDataObjectKeyword_0; }
		
		//'TextAnnotation'
		public Keyword getTextAnnotationKeyword_1() { return cTextAnnotationKeyword_1; }
		
		//'DataStore'
		public Keyword getDataStoreKeyword_2() { return cDataStoreKeyword_2; }
	}
	public class RoleElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "org.xtext.example.userstory.UserStory.Role");
		private final Assignment cNameAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cNameSTRINGTerminalRuleCall_0 = (RuleCall)cNameAssignment.eContents().get(0);
		
		//Role:
		//	name=STRING;
		@Override public ParserRule getRule() { return rule; }
		
		//name=STRING
		public Assignment getNameAssignment() { return cNameAssignment; }
		
		//STRING
		public RuleCall getNameSTRINGTerminalRuleCall_0() { return cNameSTRINGTerminalRuleCall_0; }
	}
	
	
	private final BacklogElements pBacklog;
	private final UsElements pUs;
	private final UsActivityElements pUsActivity;
	private final UsTaskElements pUsTask;
	private final UsEventElements pUsEvent;
	private final UsArtifactElements pUsArtifact;
	private final ArtifactTypeElements pArtifactType;
	private final RoleElements pRole;
	
	private final Grammar grammar;
	
	private final TerminalsGrammarAccess gaTerminals;

	@Inject
	public UserStoryGrammarAccess(GrammarProvider grammarProvider,
			TerminalsGrammarAccess gaTerminals) {
		this.grammar = internalFindGrammar(grammarProvider);
		this.gaTerminals = gaTerminals;
		this.pBacklog = new BacklogElements();
		this.pUs = new UsElements();
		this.pUsActivity = new UsActivityElements();
		this.pUsTask = new UsTaskElements();
		this.pUsEvent = new UsEventElements();
		this.pUsArtifact = new UsArtifactElements();
		this.pArtifactType = new ArtifactTypeElements();
		this.pRole = new RoleElements();
	}
	
	protected Grammar internalFindGrammar(GrammarProvider grammarProvider) {
		Grammar grammar = grammarProvider.getGrammar(this);
		while (grammar != null) {
			if ("org.xtext.example.userstory.UserStory".equals(grammar.getName())) {
				return grammar;
			}
			List<Grammar> grammars = grammar.getUsedGrammars();
			if (!grammars.isEmpty()) {
				grammar = grammars.iterator().next();
			} else {
				return null;
			}
		}
		return grammar;
	}
	
	@Override
	public Grammar getGrammar() {
		return grammar;
	}
	
	
	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//Backlog:
	//	name=STRING
	//	backlog+=Us*;
	public BacklogElements getBacklogAccess() {
		return pBacklog;
	}
	
	public ParserRule getBacklogRule() {
		return getBacklogAccess().getRule();
	}
	
	//Us:
	//	'User' 'story' ':' id=INT titre=STRING?
	//	'As' 'a' role=Role? 'I' 'want' 'to' 'be' 'able' 'to' activity=usActivity? ('Scenario' ':')? ('Given'
	//	artifact=usArtifact ('and' otherArtifact=usArtifact)*)? ('When' Event=usEvent ('and' otherEvent=usEvent)*)? ('coming'
	//	'from' otherActivity=[usActivity]*)? ('Then' Event=usEvent)?;
	public UsElements getUsAccess() {
		return pUs;
	}
	
	public ParserRule getUsRule() {
		return getUsAccess().getRule();
	}
	
	//usActivity:
	//	usEvent | usTask;
	public UsActivityElements getUsActivityAccess() {
		return pUsActivity;
	}
	
	public ParserRule getUsActivityRule() {
		return getUsActivityAccess().getRule();
	}
	
	//usTask:
	//	id=INT
	//	ref=INT?
	//	name=STRING;
	public UsTaskElements getUsTaskAccess() {
		return pUsTask;
	}
	
	public ParserRule getUsTaskRule() {
		return getUsTaskAccess().getRule();
	}
	
	//usEvent:
	//	id=INT
	//	ref=INT?
	//	name=STRING
	//	type=INT;
	public UsEventElements getUsEventAccess() {
		return pUsEvent;
	}
	
	public ParserRule getUsEventRule() {
		return getUsEventAccess().getRule();
	}
	
	//usArtifact:
	//	id=INT
	//	name=STRING
	//	type=ArtifactType;
	public UsArtifactElements getUsArtifactAccess() {
		return pUsArtifact;
	}
	
	public ParserRule getUsArtifactRule() {
		return getUsArtifactAccess().getRule();
	}
	
	//ArtifactType:
	//	'DataObject' | 'TextAnnotation' | 'DataStore';
	public ArtifactTypeElements getArtifactTypeAccess() {
		return pArtifactType;
	}
	
	public ParserRule getArtifactTypeRule() {
		return getArtifactTypeAccess().getRule();
	}
	
	//Role:
	//	name=STRING;
	public RoleElements getRoleAccess() {
		return pRole;
	}
	
	public ParserRule getRoleRule() {
		return getRoleAccess().getRule();
	}
	
	//terminal ID:
	//	'^'? ('a'..'z' | 'A'..'Z' | '_') ('a'..'z' | 'A'..'Z' | '_' | '0'..'9')*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	}
	
	//terminal INT returns ecore::EInt:
	//	'0'..'9'+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	}
	
	//terminal STRING:
	//	'"' ('\\' . | !('\\' | '"'))* '"' |
	//	"'" ('\\' . | !('\\' | "'"))* "'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	}
	
	//terminal ML_COMMENT:
	//	'/*'->'*/';
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	}
	
	//terminal SL_COMMENT:
	//	'//' !('\n' | '\r')* ('\r'? '\n')?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	}
	
	//terminal WS:
	//	' ' | '\t' | '\r' | '\n'+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	}
	
	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	}
}
