/**
 * generated by Xtext 2.24.0
 */
package org.xtext.example.userstory.userStory.impl;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.impl.EFactoryImpl;

import org.eclipse.emf.ecore.plugin.EcorePlugin;

import org.xtext.example.userstory.userStory.*;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Factory</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class UserStoryFactoryImpl extends EFactoryImpl implements UserStoryFactory
{
  /**
   * Creates the default factory implementation.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public static UserStoryFactory init()
  {
    try
    {
      UserStoryFactory theUserStoryFactory = (UserStoryFactory)EPackage.Registry.INSTANCE.getEFactory(UserStoryPackage.eNS_URI);
      if (theUserStoryFactory != null)
      {
        return theUserStoryFactory;
      }
    }
    catch (Exception exception)
    {
      EcorePlugin.INSTANCE.log(exception);
    }
    return new UserStoryFactoryImpl();
  }

  /**
   * Creates an instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public UserStoryFactoryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EObject create(EClass eClass)
  {
    switch (eClass.getClassifierID())
    {
      case UserStoryPackage.BACKLOG: return createBacklog();
      case UserStoryPackage.US: return createUs();
      case UserStoryPackage.US_ACTIVITY: return createusActivity();
      case UserStoryPackage.US_TASK: return createusTask();
      case UserStoryPackage.US_EVENT: return createusEvent();
      case UserStoryPackage.US_ARTIFACT: return createusArtifact();
      case UserStoryPackage.ROLE: return createRole();
      default:
        throw new IllegalArgumentException("The class '" + eClass.getName() + "' is not a valid classifier");
    }
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Backlog createBacklog()
  {
    BacklogImpl backlog = new BacklogImpl();
    return backlog;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Us createUs()
  {
    UsImpl us = new UsImpl();
    return us;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public usActivity createusActivity()
  {
    usActivityImpl usActivity = new usActivityImpl();
    return usActivity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public usTask createusTask()
  {
    usTaskImpl usTask = new usTaskImpl();
    return usTask;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public usEvent createusEvent()
  {
    usEventImpl usEvent = new usEventImpl();
    return usEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public usArtifact createusArtifact()
  {
    usArtifactImpl usArtifact = new usArtifactImpl();
    return usArtifact;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Role createRole()
  {
    RoleImpl role = new RoleImpl();
    return role;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public UserStoryPackage getUserStoryPackage()
  {
    return (UserStoryPackage)getEPackage();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @deprecated
   * @generated
   */
  @Deprecated
  public static UserStoryPackage getPackage()
  {
    return UserStoryPackage.eINSTANCE;
  }

} //UserStoryFactoryImpl
