/**
 * generated by Xtext 2.24.0
 */
package org.xtext.example.userstory.userStory.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.example.userstory.userStory.Role;
import org.xtext.example.userstory.userStory.Us;
import org.xtext.example.userstory.userStory.UserStoryPackage;
import org.xtext.example.userstory.userStory.usActivity;
import org.xtext.example.userstory.userStory.usArtifact;
import org.xtext.example.userstory.userStory.usEvent;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Us</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.example.userstory.userStory.impl.UsImpl#getId <em>Id</em>}</li>
 *   <li>{@link org.xtext.example.userstory.userStory.impl.UsImpl#getTitre <em>Titre</em>}</li>
 *   <li>{@link org.xtext.example.userstory.userStory.impl.UsImpl#getRole <em>Role</em>}</li>
 *   <li>{@link org.xtext.example.userstory.userStory.impl.UsImpl#getActivity <em>Activity</em>}</li>
 *   <li>{@link org.xtext.example.userstory.userStory.impl.UsImpl#getArtifact <em>Artifact</em>}</li>
 *   <li>{@link org.xtext.example.userstory.userStory.impl.UsImpl#getOtherArtifact <em>Other Artifact</em>}</li>
 *   <li>{@link org.xtext.example.userstory.userStory.impl.UsImpl#getEvent <em>Event</em>}</li>
 *   <li>{@link org.xtext.example.userstory.userStory.impl.UsImpl#getOtherEvent <em>Other Event</em>}</li>
 *   <li>{@link org.xtext.example.userstory.userStory.impl.UsImpl#getOtherActivity <em>Other Activity</em>}</li>
 * </ul>
 *
 * @generated
 */
public class UsImpl extends MinimalEObjectImpl.Container implements Us
{
  /**
   * The default value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected static final int ID_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getId() <em>Id</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getId()
   * @generated
   * @ordered
   */
  protected int id = ID_EDEFAULT;

  /**
   * The default value of the '{@link #getTitre() <em>Titre</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTitre()
   * @generated
   * @ordered
   */
  protected static final String TITRE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getTitre() <em>Titre</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTitre()
   * @generated
   * @ordered
   */
  protected String titre = TITRE_EDEFAULT;

  /**
   * The cached value of the '{@link #getRole() <em>Role</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRole()
   * @generated
   * @ordered
   */
  protected Role role;

  /**
   * The cached value of the '{@link #getActivity() <em>Activity</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActivity()
   * @generated
   * @ordered
   */
  protected usActivity activity;

  /**
   * The cached value of the '{@link #getArtifact() <em>Artifact</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArtifact()
   * @generated
   * @ordered
   */
  protected usArtifact artifact;

  /**
   * The cached value of the '{@link #getOtherArtifact() <em>Other Artifact</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOtherArtifact()
   * @generated
   * @ordered
   */
  protected usArtifact otherArtifact;

  /**
   * The cached value of the '{@link #getEvent() <em>Event</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEvent()
   * @generated
   * @ordered
   */
  protected usEvent event;

  /**
   * The cached value of the '{@link #getOtherEvent() <em>Other Event</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOtherEvent()
   * @generated
   * @ordered
   */
  protected usEvent otherEvent;

  /**
   * The cached value of the '{@link #getOtherActivity() <em>Other Activity</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOtherActivity()
   * @generated
   * @ordered
   */
  protected usActivity otherActivity;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected UsImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return UserStoryPackage.Literals.US;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getId()
  {
    return id;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setId(int newId)
  {
    int oldId = id;
    id = newId;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UserStoryPackage.US__ID, oldId, id));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getTitre()
  {
    return titre;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTitre(String newTitre)
  {
    String oldTitre = titre;
    titre = newTitre;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UserStoryPackage.US__TITRE, oldTitre, titre));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Role getRole()
  {
    return role;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRole(Role newRole, NotificationChain msgs)
  {
    Role oldRole = role;
    role = newRole;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, UserStoryPackage.US__ROLE, oldRole, newRole);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRole(Role newRole)
  {
    if (newRole != role)
    {
      NotificationChain msgs = null;
      if (role != null)
        msgs = ((InternalEObject)role).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - UserStoryPackage.US__ROLE, null, msgs);
      if (newRole != null)
        msgs = ((InternalEObject)newRole).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - UserStoryPackage.US__ROLE, null, msgs);
      msgs = basicSetRole(newRole, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UserStoryPackage.US__ROLE, newRole, newRole));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public usActivity getActivity()
  {
    return activity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetActivity(usActivity newActivity, NotificationChain msgs)
  {
    usActivity oldActivity = activity;
    activity = newActivity;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, UserStoryPackage.US__ACTIVITY, oldActivity, newActivity);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setActivity(usActivity newActivity)
  {
    if (newActivity != activity)
    {
      NotificationChain msgs = null;
      if (activity != null)
        msgs = ((InternalEObject)activity).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - UserStoryPackage.US__ACTIVITY, null, msgs);
      if (newActivity != null)
        msgs = ((InternalEObject)newActivity).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - UserStoryPackage.US__ACTIVITY, null, msgs);
      msgs = basicSetActivity(newActivity, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UserStoryPackage.US__ACTIVITY, newActivity, newActivity));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public usArtifact getArtifact()
  {
    return artifact;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetArtifact(usArtifact newArtifact, NotificationChain msgs)
  {
    usArtifact oldArtifact = artifact;
    artifact = newArtifact;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, UserStoryPackage.US__ARTIFACT, oldArtifact, newArtifact);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArtifact(usArtifact newArtifact)
  {
    if (newArtifact != artifact)
    {
      NotificationChain msgs = null;
      if (artifact != null)
        msgs = ((InternalEObject)artifact).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - UserStoryPackage.US__ARTIFACT, null, msgs);
      if (newArtifact != null)
        msgs = ((InternalEObject)newArtifact).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - UserStoryPackage.US__ARTIFACT, null, msgs);
      msgs = basicSetArtifact(newArtifact, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UserStoryPackage.US__ARTIFACT, newArtifact, newArtifact));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public usArtifact getOtherArtifact()
  {
    return otherArtifact;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOtherArtifact(usArtifact newOtherArtifact, NotificationChain msgs)
  {
    usArtifact oldOtherArtifact = otherArtifact;
    otherArtifact = newOtherArtifact;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, UserStoryPackage.US__OTHER_ARTIFACT, oldOtherArtifact, newOtherArtifact);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOtherArtifact(usArtifact newOtherArtifact)
  {
    if (newOtherArtifact != otherArtifact)
    {
      NotificationChain msgs = null;
      if (otherArtifact != null)
        msgs = ((InternalEObject)otherArtifact).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - UserStoryPackage.US__OTHER_ARTIFACT, null, msgs);
      if (newOtherArtifact != null)
        msgs = ((InternalEObject)newOtherArtifact).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - UserStoryPackage.US__OTHER_ARTIFACT, null, msgs);
      msgs = basicSetOtherArtifact(newOtherArtifact, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UserStoryPackage.US__OTHER_ARTIFACT, newOtherArtifact, newOtherArtifact));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public usEvent getEvent()
  {
    return event;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetEvent(usEvent newEvent, NotificationChain msgs)
  {
    usEvent oldEvent = event;
    event = newEvent;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, UserStoryPackage.US__EVENT, oldEvent, newEvent);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEvent(usEvent newEvent)
  {
    if (newEvent != event)
    {
      NotificationChain msgs = null;
      if (event != null)
        msgs = ((InternalEObject)event).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - UserStoryPackage.US__EVENT, null, msgs);
      if (newEvent != null)
        msgs = ((InternalEObject)newEvent).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - UserStoryPackage.US__EVENT, null, msgs);
      msgs = basicSetEvent(newEvent, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UserStoryPackage.US__EVENT, newEvent, newEvent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public usEvent getOtherEvent()
  {
    return otherEvent;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOtherEvent(usEvent newOtherEvent, NotificationChain msgs)
  {
    usEvent oldOtherEvent = otherEvent;
    otherEvent = newOtherEvent;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, UserStoryPackage.US__OTHER_EVENT, oldOtherEvent, newOtherEvent);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOtherEvent(usEvent newOtherEvent)
  {
    if (newOtherEvent != otherEvent)
    {
      NotificationChain msgs = null;
      if (otherEvent != null)
        msgs = ((InternalEObject)otherEvent).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - UserStoryPackage.US__OTHER_EVENT, null, msgs);
      if (newOtherEvent != null)
        msgs = ((InternalEObject)newOtherEvent).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - UserStoryPackage.US__OTHER_EVENT, null, msgs);
      msgs = basicSetOtherEvent(newOtherEvent, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UserStoryPackage.US__OTHER_EVENT, newOtherEvent, newOtherEvent));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public usActivity getOtherActivity()
  {
    if (otherActivity != null && otherActivity.eIsProxy())
    {
      InternalEObject oldOtherActivity = (InternalEObject)otherActivity;
      otherActivity = (usActivity)eResolveProxy(oldOtherActivity);
      if (otherActivity != oldOtherActivity)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, UserStoryPackage.US__OTHER_ACTIVITY, oldOtherActivity, otherActivity));
      }
    }
    return otherActivity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public usActivity basicGetOtherActivity()
  {
    return otherActivity;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setOtherActivity(usActivity newOtherActivity)
  {
    usActivity oldOtherActivity = otherActivity;
    otherActivity = newOtherActivity;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, UserStoryPackage.US__OTHER_ACTIVITY, oldOtherActivity, otherActivity));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case UserStoryPackage.US__ROLE:
        return basicSetRole(null, msgs);
      case UserStoryPackage.US__ACTIVITY:
        return basicSetActivity(null, msgs);
      case UserStoryPackage.US__ARTIFACT:
        return basicSetArtifact(null, msgs);
      case UserStoryPackage.US__OTHER_ARTIFACT:
        return basicSetOtherArtifact(null, msgs);
      case UserStoryPackage.US__EVENT:
        return basicSetEvent(null, msgs);
      case UserStoryPackage.US__OTHER_EVENT:
        return basicSetOtherEvent(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case UserStoryPackage.US__ID:
        return getId();
      case UserStoryPackage.US__TITRE:
        return getTitre();
      case UserStoryPackage.US__ROLE:
        return getRole();
      case UserStoryPackage.US__ACTIVITY:
        return getActivity();
      case UserStoryPackage.US__ARTIFACT:
        return getArtifact();
      case UserStoryPackage.US__OTHER_ARTIFACT:
        return getOtherArtifact();
      case UserStoryPackage.US__EVENT:
        return getEvent();
      case UserStoryPackage.US__OTHER_EVENT:
        return getOtherEvent();
      case UserStoryPackage.US__OTHER_ACTIVITY:
        if (resolve) return getOtherActivity();
        return basicGetOtherActivity();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case UserStoryPackage.US__ID:
        setId((Integer)newValue);
        return;
      case UserStoryPackage.US__TITRE:
        setTitre((String)newValue);
        return;
      case UserStoryPackage.US__ROLE:
        setRole((Role)newValue);
        return;
      case UserStoryPackage.US__ACTIVITY:
        setActivity((usActivity)newValue);
        return;
      case UserStoryPackage.US__ARTIFACT:
        setArtifact((usArtifact)newValue);
        return;
      case UserStoryPackage.US__OTHER_ARTIFACT:
        setOtherArtifact((usArtifact)newValue);
        return;
      case UserStoryPackage.US__EVENT:
        setEvent((usEvent)newValue);
        return;
      case UserStoryPackage.US__OTHER_EVENT:
        setOtherEvent((usEvent)newValue);
        return;
      case UserStoryPackage.US__OTHER_ACTIVITY:
        setOtherActivity((usActivity)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case UserStoryPackage.US__ID:
        setId(ID_EDEFAULT);
        return;
      case UserStoryPackage.US__TITRE:
        setTitre(TITRE_EDEFAULT);
        return;
      case UserStoryPackage.US__ROLE:
        setRole((Role)null);
        return;
      case UserStoryPackage.US__ACTIVITY:
        setActivity((usActivity)null);
        return;
      case UserStoryPackage.US__ARTIFACT:
        setArtifact((usArtifact)null);
        return;
      case UserStoryPackage.US__OTHER_ARTIFACT:
        setOtherArtifact((usArtifact)null);
        return;
      case UserStoryPackage.US__EVENT:
        setEvent((usEvent)null);
        return;
      case UserStoryPackage.US__OTHER_EVENT:
        setOtherEvent((usEvent)null);
        return;
      case UserStoryPackage.US__OTHER_ACTIVITY:
        setOtherActivity((usActivity)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case UserStoryPackage.US__ID:
        return id != ID_EDEFAULT;
      case UserStoryPackage.US__TITRE:
        return TITRE_EDEFAULT == null ? titre != null : !TITRE_EDEFAULT.equals(titre);
      case UserStoryPackage.US__ROLE:
        return role != null;
      case UserStoryPackage.US__ACTIVITY:
        return activity != null;
      case UserStoryPackage.US__ARTIFACT:
        return artifact != null;
      case UserStoryPackage.US__OTHER_ARTIFACT:
        return otherArtifact != null;
      case UserStoryPackage.US__EVENT:
        return event != null;
      case UserStoryPackage.US__OTHER_EVENT:
        return otherEvent != null;
      case UserStoryPackage.US__OTHER_ACTIVITY:
        return otherActivity != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (id: ");
    result.append(id);
    result.append(", titre: ");
    result.append(titre);
    result.append(')');
    return result.toString();
  }

} //UsImpl
